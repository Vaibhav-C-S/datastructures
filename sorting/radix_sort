def counting_sort(arr,place):
    output = [0] * len(arr)
    count = [0] * (max(arr)+1)
    for i in range(0,len(arr)):
        index = arr[i]//place
        count[index % 10] +=1

    for i in range(1,len(count)):
        count[i]+=count[i-1]

    i = len(arr)-1
    while i >=0:
        index = arr[i] // place
        output[count[index % 10]-1] = arr[i]
        count[index % 10] -= 1
        i-=1

    for i in range(0,len(arr)):
        arr[i] = output[i]


# Main function to implement radix sort
def radixSort(array):
    # Get maximum element
    max_element = max(array)

    # Apply counting sort to sort elements based on place value.
    place = 1
    while max_element // place > 0:
        counting_sort(array, place)
        place *= 10


data = [121, 432, 564, 23, 1, 45, 788]
radixSort(data)
print(data)

---------------------------------
Time Complexity	 
Best	O(n+k)
Worst	O(n+k)
Average	O(n+k)
Space Complexity	O(max)
Stability	Yes
